{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGidItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","URL","encodeURI","fetch","then","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGidItem","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACE,mCACE,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAShB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAnBxB,SAACP,GAEnBF,EAAcE,EAAEQ,OAAOF,e,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,+DAIII,MAAMF,GAAKG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAJjC,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAVnB,kBAeZL,GAfY,2CAAH,sDCAPQ,EAAa,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGnC,OACI,sBAAKI,UAAU,8CAAf,UACA,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCDCQ,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAExB,ECJ0B,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BsB,KAAK,GACLc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAPAC,qBAAU,WACN1B,EAAQC,GAAUK,MAAK,SAAAqB,GACnBF,EAAS,CAAChB,KAAKkB,EACXJ,SAAQ,SAElB,CAACtB,IAEIuB,EDTsBI,CAAa3B,GAAhCe,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,QAKpB,OACE,qCACE,oBAAIJ,UAAU,wCAAd,SAAuDlB,IACtDsB,GAAS,mBAAGJ,UAAU,mCAAb,yBACV,qBAAKA,UAAU,YAAf,SACGH,EAAOL,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA6BA,GAAZA,EAAIC,aEYhBgB,EAxBM,WAEnB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG4C,EAAWnB,KAAI,SAACV,GAAD,OAAc,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MClBpD8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.00f6c2fd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInput = (e) => {\r\n    //console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if(inputValue.trim().length > 2){\r\n        setCategories(cats =>[ inputValue,...cats])\r\n        setInputValue('')\r\n      }\r\n      \r\n      //console.log(setCategories);\r\n      //console.log(\"Submit hecho\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputValue} onChange={handleInput} />\r\n      </form>\r\n    </>\r\n  );\r\n  \r\n};\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n  }","export const getGifs = async (category) => {\r\n    const URL =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=TdPVsXWD2627bQ4Da1mMd8uI9lvVgihS`;\r\n\r\n    const { data } = await fetch(URL).then((res) => res.json());\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    //console.log(gifs);\r\n    return gifs;\r\n  };","export const GifGidItem = ({id, title, url}) => {\r\n\r\n    //console.table(id, title);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown \">\r\n        <img src={url} alt={title}/>\r\n        <p>{title}</p>\r\n        </div >\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFecthGifs\";\r\nimport { GifGidItem } from \"./GifGidItem\";\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category)\r\n  //console.log(data);\r\n  //console.log(loading);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"animate__animated animate__fadeInDown\">{category}</h1>\r\n      {loading&&<p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGidItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs =>{\r\n            setState({data:imgs,\r\n                loading:false})\r\n        })\r\n    },[category])\r\n\r\n    return state\r\n}\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n//import PropTypes from 'prop-types'\r\n\r\nconst GifExpertApp = () => {\r\n//   const categories = [\"One Punch\", \"Samurai X\", \"Goku\"];\r\n  const [categories, setCategories] = useState([\"One Punch\"])\r\n\r\n // const handleAdd = () => {\r\n    //setCategories([...categories, 'Hola']) //usando operador spreed \r\n    //setCategories(categories.concat('Manzana')) //utilizado mÃ©todo de concat\r\n    //setCategories(cats =>[...cats, 'Hunter']) //utilizado callback\r\n // }\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr />\r\n      \r\n      <ol>\r\n        {categories.map((category) => <GifGrid key={category} category={category}/>)}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\n// GifExpertApp.propTypes = {};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}